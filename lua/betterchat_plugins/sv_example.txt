-- Rename this file to "sv_defaultserverlogging.lua" to enable it.

-- Uncomment the following if you do not want clients to be able to reload this plugin - Only applies to cl_ and sh_ plugins
-- RELOADABLE = false

-- Plugins file names must be in the form [sv|sh|cl]_{pluginName}.lua
-- For example: sv_defaultserverlogging.lua, sh_simpleplugin.lua, cl_myplugin.lua

-- The following example shows how to recreate normal gmod logging - This means no logs for groups
hook.Add( "BC_onServerLog", "exampleHook", function( channelType, channelName, ... )
    local data = { ... }
    local sender = data[1]
    local senderName = "Console"
    local senderAlive = true
    if sender:IsValid() then
        senderName = sender:Nick()
        senderAlive = sender:Alive()
    end

    -- data[2] will likely be ": "
    local message = data[3]

    if channelType == bc.defines.channelTypes.GLOBAL then
        return ( senderAlive and "" or "*DEAD* " ) .. senderName .. ": " .. message
    elseif channelType == bc.defines.channelTypes.TEAM then
        -- By default, team only show if you're dead. Ofc this is wrong, but we're recreating default behaviour here.
        return ( senderAlive and "(TEAM) " or "*DEAD*(TEAM) " ) .. senderName .. ": " .. message
    elseif channelType == bc.defines.channelTypes.PRIVATE then
        -- data[2] is " -> "
        local receiver = data[3]
        -- data[4] is ": "
        message = data[5]

        -- Private messages, either via !psay, private channel, or /PM for DarkRP
        return senderName .. " to " .. receiver:Nick() .. ": " .. message
    elseif channelType == bc.defines.channelTypes.GROUP then
        -- Ignore group messages - the group id and name will be in channelName. Structure: "Group ${id} - ${name}"
        return ""
    elseif channelType == bc.defines.channelTypes.ADMIN then
        -- Admin messages using @, ulx asay, admin channel, or /adminhelp for DarkRP
        return senderName .. " to admins: " .. message
    end
end )
